name: CCL Email Fetcher CI/CD

on:
  push:
    branches: [ main, master, dev-nouman ]
  pull_request:
    branches: [ main, master, dev-nouman ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Zainab123
          POSTGRES_DB: ccl_email_fetcher_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install pytest
        pip install psycopg2-binary passlib python-jose[cryptography] python-multipart bcrypt httpx msal anthropic
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Node.js dependencies - Backend
      run: |
        cd backend
        npm ci
    
    - name: Install Node.js dependencies - Frontend
      run: |
        cd frontend/ccl-email-fetcher
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        # Add your backend tests here
        echo "Running backend tests..." # Replace with actual test command when available

  build-and-push:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push FastAPI backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.fastapi
        push: true
        tags: ghcr.io/${{ github.repository }}/ccl-fetcher-fastapi:latest
    
    - name: Build and push Express backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.express
        push: true
        tags: ghcr.io/${{ github.repository }}/ccl-fetcher-express:latest
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend/ccl-email-fetcher
        file: ./frontend/ccl-email-fetcher/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/ccl-fetcher-frontend:latest
        
    - name: Create and upload .env file
      uses: actions/upload-artifact@v4
      with:
        name: deployment-files
        path: |
          docker-compose.prod.yml
        retention-days: 1
        
    - name: Create environment file
      run: |
        cat > .env.prod << EOF
        CLIENT_ID=193cecdd-4e1c-47dd-9f6b-9b318845944a
        CLIENT_SECRET=cLt8Q~qfi7S~5uojcqSTZMfu76PKmPLch6SuXbvU
        TENANT_ID=17dba054-2a2b-4037-8c2a-5ec30609dd26
        JWT_SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
        ANTHROPIC_API_KEY=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
        EOF
        
    - name: Upload environment file
      uses: actions/upload-artifact@v4
      with:
        name: env-file
        path: .env.prod
        retention-days: 1
